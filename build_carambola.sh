#!/bin/sh

# Assumes we are sitting in ~/build, run as scripts/
set -e
set -x
X_SELF_DIR=`pwd`
cd freebsd-release-10.0.0

# pkg install gcc48 to try out later
# mkdir portsnap ports
# portsnap -d portsnap fetch
# portsnap -p ports extract
# git init???
INSTALL_PROG=install

if true ; then
  rm -rf obj root mfsroot tmp
  scripts/cleanports.sh
fi
~/freebsd-wifi-build/build/bin/build carambola2  buildworld 
~/freebsd-wifi-build/build/bin/build carambola2  buildkernel 
~/freebsd-wifi-build/build/bin/build carambola2  installworld installkernel distribution
~/freebsd-wifi-build/build/bin/build carambola2  mfsroot || true

# FIXME kernel modules are broken

# Builddep: bison gmake libtool

cd ${X_SELF_DIR}

X_STAGING_FSROOT=${X_SELF_DIR}/mfsroot/carambola2
X_DESTDIR=${X_SELF_DIR}/root/mips

DOWNLOADS=${X_SELF_DIR}/ports-distfiles
X_PORTS=${X_SELF_DIR}/ports
X_PORTSBUILD=${X_SELF_DIR}/ports-build

PACKAGES="${X_PORTS}/sysutils/less ${X_PORTS}/net-mgmt/libsmi ${X_PORTS}/net/libpcap ${X_PORTS}/net/tcpdump ${X_PORTS}/net/dhcpcd ${X_PORTS}/net/netcat ${X_PORTS}/net/rsync"

# We need fakeroot for `mtree`
# PORTSDIR=${X_PORTS}                                   # <-- ./ports           <-- generated by portsnap
# DISTDIR=${DOWNLOADS}                                  # <-- ./ports-distfiles <-- downloaded sources
# PORT_DBDIR=${X_PORTSBUILD}/db                         # <-- ./ports-build/db  <-- config
# WRKDIR=${X_PORTSBUILD}/w/$PACKAGE/work                # <-- ./ports-build/w/$PACKAGE/work
# STAGEDIR=${X_PORTSBUILD}/staging                      # <-- ./ports-build/staging
# PREFIX=/install                                       # <-- ./ports-build/staging/install/
# INSTALL_AS_USER=yes                                   # <-- required to build as normal user
# TARGET=mips TARGET_ARCH=mips TARGET_CPUTYPE=mips32
# NO_DEPENDS=1 NO_PKG_REGISTER=1 DB_FROM_SRC=1          # <-- depends check looks for libs.so's in wrong place
#
# Each port:                                              <-- ./ports-build/work/sysutils/less-458 (etc)

	    	\

for p in $PACKAGES ; do
  WORKING=`dirname $p`
  WORKING=`basename $WORKING`/`basename $p`
  cd $p                                                             # We need fakeroot for `mtree`
  fakeroot make PORTSDIR=${X_PORTS} \
              __MAKE_CONF=${X_SELF_DIR}/root/make.conf.mips DISABLE_MAKE_JOBS=yes \
              DISTDIR=${DOWNLOADS} \
              PORT_DBDIR=${X_PORTSBUILD}/db \
              WRKDIR=${X_PORTSBUILD}/w/${WORKING}/work \
              STAGEDIR=${X_PORTSBUILD}/staging \
              PREFIX=/install \
              INSTALL_AS_USER=yes \
              TARGET=mips TARGET_ARCH=mips TARGET_CPUTYPE=mips32 \
              NO_DEPENDS=1 NO_PKG_REGISTER=1 DB_FROM_SRC=1 \
              BUILD_FLAGS=NO_CLEAN=1 \
              -DDISABLE_VULNERABILITIES \
                install
done

cd ${X_SELF_DIR}


${INSTALL_PROG} ${X_DESTDIR}/bin/date ${X_STAGING_FSROOT}/bin/
${INSTALL_PROG} ${X_DESTDIR}/bin/kill ${X_STAGING_FSROOT}/bin/
# ${INSTALL_PROG} ${X_DESTDIR}/sbin/bsdbox ${X_STAGING_FSROOT}/bin/
${INSTALL_PROG} ${X_DESTDIR}/sbin/sha1 ${X_STAGING_FSROOT}/sbin/
${INSTALL_PROG} ${X_DESTDIR}/sbin/sha256 ${X_STAGING_FSROOT}/sbin/
${INSTALL_PROG} ${X_DESTDIR}/sbin/sha512 ${X_STAGING_FSROOT}/sbin/
${INSTALL_PROG} ${X_DESTDIR}/sbin/pfctl ${X_STAGING_FSROOT}/sbin/
${INSTALL_PROG} ${X_DESTDIR}/sbin/pflogd ${X_STAGING_FSROOT}/sbin/


X_FROM=${X_PORTSBUILD}/staging/install
${INSTALL_PROG} ${X_FROM}/bin/less ${X_STAGING_FSROOT}/bin/
${INSTALL_PROG} ${X_FROM}/bin/netcat ${X_STAGING_FSROOT}/bin/
${INSTALL_PROG} ${X_FROM}/bin/rsync ${X_STAGING_FSROOT}/bin/
${INSTALL_PROG} ${X_FROM}/sbin/tcpdump ${X_STAGING_FSROOT}/sbin/
${INSTALL_PROG} ${X_FROM}/sbin/dhcpcd ${X_STAGING_FSROOT}/sbin/
${INSTALL_PROG} ${X_FROM}/lib/lib* ${X_STAGING_FSROOT}/lib/
${INSTALL_PROG} ${X_FROM}/etc/rc.d/dhcpcd ${X_STAGING_FSROOT}/etc/
${INSTALL_PROG} ${X_FROM}/etc/dhcpcd.conf.sample ${X_STAGING_FSROOT}/etc/dhcpcd.conf
${INSTALL_PROG} ${X_FROM}/libexec/dhcpcd-run-hooks ${X_STAGING_FSROOT}/libexec/
${INSTALL_PROG} -d ${X_FROM}/libexec/dhcpcd-hooks/* ${X_STAGING_FSROOT}/libexec/dhcpcd-hooks/
# ${INSTALL_PROG} ${X_FROM}/etc/rc.d/rsyncd ${X_STAGING_FSROOT}/etc/




~/freebsd-wifi-build/build/bin/build carambola2  fsimage uboot

# dnsmasq??? dyndns

# POST INSTALL: ldconfig ?
